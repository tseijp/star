"use strict";(self.webpackChunk_star_website=self.webpackChunk_star_website||[]).push([[719],{3905:function(t,e,a){a.d(e,{Zo:function(){return c},kt:function(){return s}});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var p=n.createContext({}),d=function(t){var e=n.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},c=function(t){var e=d(t.components);return n.createElement(p.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},u=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,p=t.parentName,c=o(t,["components","mdxType","originalType","parentName"]),u=d(a),s=r,k=u["".concat(p,".").concat(s)]||u[s]||m[s]||l;return a?n.createElement(k,i(i({ref:e},c),{},{components:a})):n.createElement(k,i({ref:e},c))}));function s(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=u;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o.mdxType="string"==typeof t?t:r,i[1]=o;for(var d=2;d<l;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},8530:function(t,e,a){a.r(e),a.d(e,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return d},toc:function(){return c},default:function(){return u}});var n=a(7462),r=a(3366),l=(a(7294),a(3905)),i=["components"],o={sidebar_position:1},p="Vector",d={unversionedId:"api/math/Vector",id:"api/math/Vector",title:"Vector",description:"Code Example",source:"@site/../docs/api/math/Vector.md",sourceDirName:"api/math",slug:"/api/math/Vector",permalink:"/star/docs/api/math/Vector",editUrl:"https://github.com/tseijp/star/tree/main/docs/../docs/api/math/Vector.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"defaultSidebar",previous:{title:"Scalar",permalink:"/star/docs/api/math/Scalar"},next:{title:"Matrix",permalink:"/star/docs/api/math/Matrix"}},c=[{value:"Code Example",id:"code-example",children:[],level:2},{value:"Constructor",id:"constructor",children:[],level:2},{value:"Methods",id:"methods",children:[{value:"Basic Properties Methods",id:"basic-properties-methods",children:[],level:3},{value:"Basic Math Methods",id:"basic-math-methods",children:[],level:3}],level:2}],m={toc:c};function u(t){var e=t.components,a=(0,r.Z)(t,i);return(0,l.kt)("wrapper",(0,n.Z)({},m,a,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"vector"},"Vector"),(0,l.kt)("h2",{id:"code-example"},"Code Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"::STAR::Vector a( 0, 1, 0 );\n\n::STAR::Vector b(); // will be initialised to( 0, 0, 0 )\n\n::STAR::Vector c = a + b;\n")),(0,l.kt)("h2",{id:"constructor"},"Constructor"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"Vector vector(Scalar x, Scalar y, Scalar z)\n\nVector vector(Vector v)\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"x - the x value of this vector. Default is ",(0,l.kt)("strong",{parentName:"li"},"0")),(0,l.kt)("li",{parentName:"ul"},"y - the y value of this vector. Default is ",(0,l.kt)("strong",{parentName:"li"},"0")),(0,l.kt)("li",{parentName:"ul"},"z - the z value of this vector. Default is ",(0,l.kt)("strong",{parentName:"li"},"0"))),(0,l.kt)("h2",{id:"methods"},"Methods"),(0,l.kt)("h3",{id:"basic-properties-methods"},"Basic Properties Methods"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Basic Operations")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Properties"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".[0]: Scalar")),(0,l.kt)("td",{parentName:"tr",align:null},"Returns a the value ",(0,l.kt)("inlineCode",{parentName:"td"},"x")," of this vector.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".[1]: Scalar")),(0,l.kt)("td",{parentName:"tr",align:null},"Returns a the value ",(0,l.kt)("inlineCode",{parentName:"td"},"y")," of this vector.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".[2]: Scalar")),(0,l.kt)("td",{parentName:"tr",align:null},"Returns a the value ",(0,l.kt)("inlineCode",{parentName:"td"},"z")," of this vector.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Basic Getter Methods")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Properties"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".x(): Scalar")),(0,l.kt)("td",{parentName:"tr",align:null},"Returns a the value ",(0,l.kt)("inlineCode",{parentName:"td"},"x")," of this vector.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".y(): Scalar")),(0,l.kt)("td",{parentName:"tr",align:null},"Returns a the value ",(0,l.kt)("inlineCode",{parentName:"td"},"x")," of this vector.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".z(): Scalar")),(0,l.kt)("td",{parentName:"tr",align:null},"Returns a the value ",(0,l.kt)("inlineCode",{parentName:"td"},"x")," of this vector.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".print(): void")),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Basic Setter Methods")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Properties"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".set(Scalar s): this")),(0,l.kt)("td",{parentName:"tr",align:null},"Copies the value to this Vector ",(0,l.kt)("inlineCode",{parentName:"td"},"x, y, z"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".set(Vector v): this")),(0,l.kt)("td",{parentName:"tr",align:null},"Copies the values of ",(0,l.kt)("inlineCode",{parentName:"td"},"x, y, z")," to this Vector.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".setX(Scalar s): this")),(0,l.kt)("td",{parentName:"tr",align:null},"Copies the value of ",(0,l.kt)("inlineCode",{parentName:"td"},"x")," to this Vector.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".setY(Scalar s): this")),(0,l.kt)("td",{parentName:"tr",align:null},"Copies the value of ",(0,l.kt)("inlineCode",{parentName:"td"},"y")," to this Vector.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".setZ(Scalar s): this")),(0,l.kt)("td",{parentName:"tr",align:null},"Copies the value of ",(0,l.kt)("inlineCode",{parentName:"td"},"z")," to this Vector.")))),(0,l.kt)("h3",{id:"basic-math-methods"},"Basic Math Methods"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Basic Operations")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Properties"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"+(): Vector")),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-(): Vector")),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"+(Scalar s): Vector")),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-(Scalar s): Vector")),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"*(Scalar s): Vector")),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"/(Scalar s): Vector")),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"+(Vector v): Vector")),(0,l.kt)("td",{parentName:"tr",align:null},"Calculates the add product of this vector and v.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-(Vector v): Vector")),(0,l.kt)("td",{parentName:"tr",align:null},"Calculates the sub product of this vector and v.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"*(Vector v): Vector")),(0,l.kt)("td",{parentName:"tr",align:null},"Calculates the cross product of this vector and v.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Basic Calculations")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Properties"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".dot(Vector v): Scalar")),(0,l.kt)("td",{parentName:"tr",align:null},"Calculates the dot product of this vector and v.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".length(): Scalar")),(0,l.kt)("td",{parentName:"tr",align:null},"Calculates the Euclidean length from(0, 0) to(x, y, z).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".triple(): Scalar")),(0,l.kt)("td",{parentName:"tr",align:null},"Calculates the triple product of this vector and v.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".cross(Vector v1, Vector v2): Vector")),(0,l.kt)("td",{parentName:"tr",align:null},"Calculates the cross product of this vector, v1 and v2.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".clone(): Vector")),(0,l.kt)("td",{parentName:"tr",align:null},"Returns a new Vector with the same x and y values as this one.")))))}u.isMDXComponent=!0}}]);